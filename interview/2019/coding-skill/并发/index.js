// 并发的问题，有多个异步函数，要在这些异步函数都执行完了，然后


// 思考一个问题，“体检”。体检的项目有 10 项(分数不一定)，需要发送10个请求，由于接口速度不确定，需要准备三种方案
// 1、接口的速度都很快，可以 await 一个接口，然后加分，等待分数动画结束，继续 await 下一个接口
// 2、接口的速度有些会慢，不想到加分动画有“等待”的情况出现
// - 直接执行 10 个请求，每一个接口返回了，就对 arr push 一项，每次一段动画执行完就去读数组的下一项，然后加分
// 但这种思路会有“漏洞”，就是，动画执行完了，但是还有接口在请求中（极端情况），怎么办？
// - 其实可以理解为 10 个异步操作，各个操作执行完毕之后，依次往一个一部队列中放任务，放入的顺序就是这些异步任务执行的顺序，每次是否执行下一个异步任务的触发，
// 不再是单单是上面讲的，上一个异步任务执行完毕触发，而是加个条件，10 个异步请求，每次请求完了，看下放在数组中的异步任务是否都执行完了，如果没有，那就直接
// 放进去，如果之前的都执行完了，就等自己来继续动画，那就接上动画继续执行。而这个判断是 ---- 当前动画执行完 && 自己之后没有待执行的动画。
// 3、动画是 ease-in-out 的，不想精度条有忽快忽慢的情况，有办法吗？